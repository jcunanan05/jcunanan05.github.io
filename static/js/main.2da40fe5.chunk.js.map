{"version":3,"sources":["views/components/Navbar/Header.js","views/components/Navbar/Drawer.js","views/components/Navbar/index.js","views/components/Layout.js","views/components/Navbar/Link.js","views/components/Grid.js","views/components/Icon.js","views/pages/Banner.js","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","_ref$title","title","_ref$links","links","react_default","a","createElement","className","Drawer","Navbar","react","Layout","children","Link","_ref$href","href","Cell","_ref$className","concat","Grid","_ref2","_ref2$className","Icon","target","rel","Hero","subtitle","Icon_Icon","ImageOverlay","src","alt","ColorOverlay","Banner","id","Banner_Hero","Banner_ImageOverlay","Banner_ColorOverlay","NavbarLinks","App","Navbar_Navbar","App_NavbarLinks","Banner_Banner","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2da40fe5.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header({ title = 'title', links='' }) {\n\n  return (\n    <header className=\"mdl-layout__header\">\n      <div className=\"mdl-layout__header-row\">\n        <span className=\"mdl-layout-title\">{title}</span>\n\n        <div className=\"mdl-layout-spacer\" />\n        <nav className=\"mdl-navigation mdl-layout--large-screen-only\">\n          {links}\n        </nav>\n      </div>\n    </header>\n  );\n}\n","import React from 'react';\n\nexport default function Drawer({ title = 'Title', links='' }) {\n  return (\n    <div className=\"mdl-layout__drawer\">\n      <span className=\"mdl-layout-title\">{title}</span>\n      <nav className=\"mdl-navigation\">\n        {links}\n      </nav>\n    </div>\n  );\n}\n","import React, { Fragment } from 'react';\nimport Header from './Header';\nimport Drawer from './Drawer';\n\nimport './Navbar.css';\n\nexport default function Navbar({ title = 'Title', links='' }) {\n  return (\n    <Fragment>\n      <Header title={title} links={links} />\n      <Drawer title={title} links={links} />\n    </Fragment>\n  );\n}\n","import React from 'react';\n\nexport default function Layout({ children }) {\n  return (\n    <div className=\"mdl-layout mdl-js-layout mdl-layout--fixed-header\">\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Link({ href = '#', title = 'Link' }) {\n  return (\n    <a className=\"mdl-navigation__link\" href={href}>\n      {title}\n    </a>\n  );\n}\n","import React from 'react';\n\nexport function Cell({ className='', children }) {\n  return <div className={`mdl-cell ${className}`}>{children}</div>;\n}\n\nexport default function Grid({ className='', children }) {\n  return <div className={`mdl-grid ${className}`}>{children}</div>;\n}\n","import React from 'react';\n\nimport './Icon.css';\n\nexport default function Icon({ className = '', href = '' }) {\n  if (href === '') return <i className={`Icon ${className}`} />;\n  return (\n    <a className={'Icon__link'} href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <i className={`Icon ${className}`} />\n    </a>\n  )\n}","import React from 'react';\nimport Grid, { Cell } from '../components/Grid';\nimport Icon from '../components/Icon'\n\nimport './Banner.css';\n\nconst Hero = ({ title, subtitle }) => (\n  <Cell className=\"mdl-cell--12-col Banner__hero\">\n    <div className=\"titles\">\n      <h1 className=\"Banner__title\">{title}</h1>\n      <h2 className=\"Banner__subtitle\">{subtitle}</h2>\n    </div>\n    <div className=\"social-media\">\n      <Icon className=\"fab fa-github-alt\" href=\"https://github.com/jcunanan05\" />\n      <Icon className=\"fab fa-linkedin\" href=\"https://www.linkedin.com/in/cunananjonathan/\" />\n      <Icon className=\"fab fa-free-code-camp\" href=\"https://www.freecodecamp.org/jcunanan05\" />\n      <Icon className=\"fab fa-codepen\" href=\"https://codepen.io/jcunanan05/\" />\n    </div>\n  </Cell>\n);\n\nconst ImageOverlay = () => (\n  <span className=\"image__overlay\">\n    <img src=\"/images/sand\" alt=\"\" />\n  </span>\n);\n\nconst ColorOverlay = () => <span className=\"color__overlay\" />;\n\nexport default function Banner() {\n  return (\n    <section className=\"Banner\" id=\"banner\">\n      <Grid>\n        <Hero title=\"Jonathan Cunanan\" subtitle=\"Front-end Developer\" />\n      </Grid>\n      <ImageOverlay />\n      <ColorOverlay />\n    </section>\n  );\n}\n","import React, { Component, Fragment } from 'react';\nimport Navbar from './views/components/Navbar';\nimport Layout from './views/components/Layout';\nimport NavbarLink from './views/components/Navbar/Link';\nimport Banner from './views/pages/Banner';\n// import Projects from './views/pages/Projects';\n\nimport './App.css';\n\nconst NavbarLinks = () => (\n  <Fragment>\n    <NavbarLink title=\"About\" href=\"#about\"/>\n    <NavbarLink title=\"Projects\" href=\"#projects\" />\n    <NavbarLink title=\"Skills\" href=\"#skills\"/>\n  </Fragment>\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Navbar title=\"Jonathan C.\" links={<NavbarLinks />} />\n\n        <main className=\"mdl-layout__content\">\n          <Banner />\n          {/* <Projects /> */}\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}